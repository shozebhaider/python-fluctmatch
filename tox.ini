[tox]
envlist = py36,
          py37,
          py38
          check,
          clean,
          docs,
          package_description
          report,
minversion = 3.7
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    CURL_CA_BUNDLE
    http_proxy
    https_proxy
    no_proxy
    REQUESTS_CA_BUNDLE
    SSL_CERT_FILE
    PYTEST_*
    PIP_CACHE_DIR
deps = pip >= 19.3.1
       -r{toxinidir}/requirements.txt
       coverage >= 5.0.1, < 6
       flaky
       pytest
       pytest-travis-fold
       pytest-cov
       pytest-randomly
extras = testing
commands = coverage run -m pytest {toxinidir}/tests

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.7
deps =
    -r{toxinidir}/docs/requirements.txt
extras = docs
commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:package_description]
description = check that the long description is valid
basepython = python3.7
deps = twine >= 1.12.1
       # TODO installing readme-renderer[md] should not be necessary
       readme-renderer[md] >= 24.0
       pip >= 18.0.0
skip_install = true
extras =
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*

[testenv:check]
description = Check various file information
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
    twine
skip_install = true
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 5.0.1, < 6
skip_install = True
passenv = {[testenv]passenv}
          DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = pytest --cov --cov-report xml:{toxworkdir}/coverage.xml \
           --cov-report html:{toxworkdir}/htmlcov tests
depends = py36, py37, py38, pypy3
parallel_show_output = True

[testenv:exit_code]
# to see how the InvocationError is displayed, use
# PYTHONPATH=.:$PYTHONPATH python3 -m tox -e exit_code
basepython = python3.7
description = commands with several exit codes
skip_install = True
commands = python3 -c "import sys; sys.exit(139)"

[testenv:X]
description = print the positional arguments passed in with echo
commands = echo {posargs}

[testenv:report]
deps = {[testenv]deps}
skip_install = true
commands =
    coverage run -m pytest {toxinidir}/tests
    coverage combine --append
    coverage report
    coverage html
    coverage xml

[testenv:clean]
commands =
    coverage erase
skip_install = true
deps = coverage

[flake8]
max-complexity = 22
max-line-length = 82
ignore = E203, W503, C901, E402, B011, W605, E741

[pep8]
max-line-length = 82

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/tox
         */.tox/*/lib/python*/site-packages/tox
         */.tox/pypy*/site-packages/tox
         */.tox\*\Lib\site-packages\tox
         */src/tox
         *\src\tox

[pytest]
addopts = -ra --showlocals --no-success-flaky-report
rsyncdirs = tests tox
looponfailroots = tox tests
testpaths = tests
xfail_strict = True
markers =
    git
    network

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 82
known_first_party = tox,tests
known_third_party = apiclient,docutils,filelock,flaky,freezegun,git,httplib2,oauth2client,packaging,pathlib2,pluggy,py,pytest,setuptools,six,sphinx,toml

[testenv:release]
description = do a release, required posarg of the version number
basepython = python3.7
passenv = *
deps = gitpython >= 2.1.10
       towncrier >= 18.5.0
       packaging  >= 17.1
commands = python {toxinidir}/tasks/release.py --version {posargs}

[testenv:notify]
description = notify people about the release of the library
basepython = python3.7
skip_install = true
passenv = *
deps = gitpython >= 2.1.10
       packaging  >= 17.1
       google-api-python-client >= 1.7.3
       oauth2client >= 4.1.2
commands = python {toxinidir}/tasks/notify.py

[testenv:dev]
description = dev environment with all deps at {envdir}
extras = testing, docs
deps = {[testenv]deps}
       {[testenv:release]deps}
       {[testenv:notify]deps}
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"
